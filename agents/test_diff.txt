commit 1234567890abcdef1234567890abcdef12345678
Author: Test Developer <test@example.com>
Date:   Mon Jun 30 10:00:00 2025 -0700

    Add user authentication feature
    
    - Implemented login and logout functionality
    - Added session management
    - Created user model and database migrations

diff --git a/src/auth/login.js b/src/auth/login.js
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/src/auth/login.js
@@ -0,0 +1,25 @@
+const bcrypt = require('bcrypt');
+const jwt = require('jsonwebtoken');
+const User = require('../models/User');
+
+async function login(email, password) {
+  try {
+    // Find user by email
+    const user = await User.findOne({ email });
+    if (!user) {
+      throw new Error('Invalid credentials');
+    }
+    
+    // Check password
+    const isValid = await bcrypt.compare(password, user.hashedPassword);
+    if (!isValid) {
+      throw new Error('Invalid credentials');
+    }
+    
+    // Generate JWT token
+    const token = jwt.sign({ userId: user.id }, process.env.JWT_SECRET);
+    return { token, user };
+  } catch (error) {
+    throw error;
+  }
+}

diff --git a/src/models/User.js b/src/models/User.js
new file mode 100644
index 0000000..8901234
--- /dev/null
+++ b/src/models/User.js
@@ -0,0 +1,15 @@
+const mongoose = require('mongoose');
+
+const userSchema = new mongoose.Schema({
+  email: {
+    type: String,
+    required: true,
+    unique: true
+  },
+  hashedPassword: {
+    type: String,
+    required: true
+  },
+  createdAt: { type: Date, default: Date.now }
+});
+
diff --git a/package.json b/package.json
index 1234567..8901234 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,8 @@
   "dependencies": {
     "express": "^4.18.0",
     "mongoose": "^6.0.0",
+    "bcrypt": "^5.1.0",
+    "jsonwebtoken": "^9.0.0",
     "dotenv": "^16.0.0"
   }
 } 